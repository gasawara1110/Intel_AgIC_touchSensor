#ifndef MPR121_H_
#define MPR121_H_
#include"arduino.h"
#include "Wire.h"

#define MPR121_ADDR 0x5A
#define I2C_ERROR_WRITE 0x00
#define I2C_ERROR_READ 0x10
#define I2C_RECEIVED_BYTES_ERROR 0x01
#define TOUCH_STATUS0 0x00
#define TOUCH_STATUS1 0x01
#define OOR_STATUS0 0x02
#define OOR_STATUS1 0x03
#define ELE0_ELECTRODE_FILTERED_DATA_LSB 0x04
#define ELE0_ELECTRODE_FILTERED_DATA_MSB 0x05
#define ELE1_ELECTRODE_FILTERED_DATA_LSB 0x06
#define ELE1_ELECTRODE_FILTERED_DATA_MSB 0x07
#define ELE2_ELECTRODE_FILTERED_DATA_LSB 0x08
#define ELE2_ELECTRODE_FILTERED_DATA_MSB 0x09
#define ELE3_ELECTRODE_FILTERED_DATA_LSB 0x0A
#define ELE3_ELECTRODE_FILTERED_DATA_MSB 0x0B
#define ELE4_ELECTRODE_FILTERED_DATA_LSB 0x0C
#define ELE4_ELECTRODE_FILTERED_DATA_MSB 0x0D
#define ELE5_ELECTRODE_FILTERED_DATA_LSB 0x0E
#define ELE5_ELECTRODE_FILTERED_DATA_MSB 0x0F
#define ELE6_ELECTRODE_FILTERED_DATA_LSB 0x10
#define ELE6_ELECTRODE_FILTERED_DATA_MSB 0x11
#define ELE7_ELECTRODE_FILTERED_DATA_LSB 0x12
#define ELE7_ELECTRODE_FILTERED_DATA_MSB 0x13
#define ELE8_ELECTRODE_FILTERED_DATA_LSB 0x14
#define ELE8_ELECTRODE_FILTERED_DATA_MSB 0x15
#define ELE9_ELECTRODE_FILTERED_DATA_LSB 0x16
#define ELE9_ELECTRODE_FILTERED_DATA_MSB 0x17
#define ELE10_ELECTRODE_FILTERED_DATA_LSB 0x18
#define ELE10_ELECTRODE_FILTERED_DATA_MSB 0x19
#define ELE11_ELECTRODE_FILTERED_DATA_LSB 0x1A
#define ELE11_ELECTRODE_FILTERED_DATA_MSB 0x1B
#define ELE0_BASELINE_VALUE 0x1E
#define ELE1_BASELINE_VALUE 0x1F
#define ELE2_BASELINE_VALUE 0x20
#define ELE3_BASELINE_VALUE 0x21
#define ELE4_BASELINE_VALUE 0x22
#define ELE5_BASELINE_VALUE 0x23
#define ELE6_BASELINE_VALUE 0x24
#define ELE7_BASELINE_VALUE 0x25
#define ELE8_BASELINE_VALUE 0x26
#define ELE9_BASELINE_VALUE 0x27
#define ELE10_BASELINE_VALUE 0x28
#define ELE11_BASELINE_VALUE 0x29
#define MHD_RISING 0x2B
#define NHD_RISING 0x2C
#define NCL_RISING 0x2D
#define FDL_RISING 0x2E
#define MHD_FALLING 0x2F
#define NHD_FALLING 0x30
#define NCL_FALLING 0x31
#define FDL_FALLING 0x32
#define NHD_TOUCHED 0x33
#define NCL_TOUCHED 0x34
#define FDL_TOUCHED 0x35
#define ELEPROX_MHD_RISING 0x36
#define ELEPROX_NHD_RISING 0x37
#define ELEPROX_NCL_RISING 0x38
#define ELEPROX_FDL_RISING 0x39
#define ELEPROX_MHD_FALLING 0x3A
#define ELEPROX_NHD_FALLING 0x3B
#define ELEPROX_NCL_FALLING 0x3C
#define ELEPROX_FDL_FALLING 0x3D
#define ELEPROX_NHD_TOUCHED 0x3E
#define ELEPROX_NCL_TOUCHED 0x3F
#define ELEPROX_FDL_TOUCHED 0x40
#define ELE0_TOUCH_THRESHOLD 0x41
#define ELE0_RELEASE_THRESHOLD 0x42
#define ELE1_TOUCH_THRESHOLD 0x43
#define ELE1_RELEASE_THRESHOLD 0x44
#define ELE2_TOUCH_THRESHOLD 0x45
#define ELE2_RELEASE_THRESHOLD 0x46
#define ELE3_TOUCH_THRESHOLD 0x47
#define ELE3_RELEASE_THRESHOLD 0x48
#define ELE4_TOUCH_THRESHOLD 0x49
#define ELE4_RELEASE_THRESHOLD 0x4A
#define ELE5_TOUCH_THRESHOLD 0x4B
#define ELE5_RELEASE_THRESHOLD 0x4C
#define ELE6_TOUCH_THRESHOLD 0x4D
#define ELE6_RELEASE_THRESHOLD 0x4E
#define ELE7_TOUCH_THRESHOLD 0x4F
#define ELE7_RELEASE_THRESHOLD 0x50
#define ELE8_TOUCH_THRESHOLD 0x51
#define ELE8_RELEASE_THRESHOLD 0x52
#define ELE9_TOUCH_THRESHOLD 0x53
#define ELE9_RELEASE_THRESHOLD 0x54
#define ELE10_TOUCH_THRESHOLD 0x55
#define ELE10_RELEASE_THRESHOLD 0x56
#define ELE11_TOUCH_THRESHOLD 0x57
#define ELE11_RELEASE_THRESHOLD 0x58
#define DEBOUNCE_TOUCH_AND_RELEASE 0x5B
#define AFE_CONFIGURATION1 0x5C
#define AFE_CONFIGURATION2 0x5D
#define ELECTRODE_CONFIGURATION 0x5E
#define ELE0_ELECTRODE_CURRENT 0x5F
#define ELE1_ELECTRODE_CURRENT 0x60
#define ELE2_ELECTRODE_CURRENT 0x61
#define ELE3_ELECTRODE_CURRENT 0x62
#define ELE4_ELECTRODE_CURRENT 0x63
#define ELE5_ELECTRODE_CURRENT 0x64
#define ELE6_ELECTRODE_CURRENT 0x65
#define ELE7_ELECTRODE_CURRENT 0x66
#define ELE8_ELECTRODE_CURRENT 0x67
#define ELE9_ELECTRODE_CURRENT 0x68
#define ELE10_ELECTRODE_CURRENT 0x69
#define ELE11_ELECTRODE_CURRENT 0x6A
#define ELE0_ELE1_CHARGE_TIME 0x6C
#define ELE2_ELE3_CHARGE_TIME 0x6D
#define ELE4_ELE5_CHARGE_TIME 0x6E
#define ELE6_ELE7_CHARGE_TIME 0x6F
#define ELE8_ELE9_CHARGE_TIME 0x70
#define ELE10_ELE11_CHARGE_TIME 0x71
#define GPIO_CONTROL_REGISTER0 0x73
#define GPIO_CONTROL_REGISTER1 0x74
#define GPIO_DATA_REGISTER 0x75
#define GPIO_DIRECTION_CONTROL_REGISTER 0x76
#define GPIO_ENABLE_REGISTER 0x77
#define GPIO_DATA_SET_REGISTER 0x78
#define GPIO_DATA_CLEAR_REGISTER 0x79
#define GPIO_DATA_TOGGLE_REGISTER 0x7A


class MPR121
{
    public:
        MPR121();
        void writeRegister(char commandAddress, char command);
        char readRegister(char commandAddress);
        char readTouchStatus(char upperNLower);
        int readElectrodeData(char ch);
        void setup();
        void calibrate();
    private:
        void i2cError(unsigned char errorno);
        void electrodeCurrentCalibrate();
        void thresholdCalibrate();
};
#endif